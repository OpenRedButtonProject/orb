# Useful references: https://gn.googlesource.com/gn/+/main/docs/reference.md

# This is done by the calling script already
# import("//build/config/BUILDCONFIG.gn")

# Define the actual library target
static_library("orb") {
  sources = [
    "moderator/Moderator.cpp",
    "moderator/AppMgrInterface.cpp",
    "moderator/Network.cpp",
    "moderator/MediaSynchroniser.cpp",
    "moderator/app_mgr/ait.cpp",
    "moderator/app_mgr/application_manager.cpp",
    "moderator/app_mgr/hbbtv_app.cpp",
    "moderator/app_mgr/opapp.cpp",
    "moderator/app_mgr/utils.cpp",
    "moderator/app_mgr/xml_parser.cpp",
    "moderator/Drm.cpp",
    "moderator/JsonRpcCallback.cpp",
    "moderator/VideoWindow.cpp",
    "moderator/WebSocketServerFactory.cpp",
  ]

  deps = [
    "//base", # For logging dependency
    "//third_party/jsoncpp",
    "//third_party/libxml",
    "//third_party/orb/logging:orb_logging_deps",
    ":orb_util",
    ":orb_network_services",
  ]

  include_dirs = [
   "moderator",
   "moderator/utilities"
  ]

  public_deps = []

  public_configs = [ ":external_lib_config" ]
}

# Expose the include directory
config("external_lib_config") {
  include_dirs = [
   "include",
   ]

  defines = [ "IS_CHROMIUM", "ORB_HBBTV_VERSION=204"]
}

static_library("opapp_package_manager") {
  sources = [
    "package_manager/OpAppPackageManager.cpp",
    "package_manager/HashCalculator.cpp",
    "package_manager/HashCalculator.h",
    "package_manager/Decryptor.cpp",
    "package_manager/Decryptor.h",
  ]

  deps = [
    "//base", # For logging dependency
    "//third_party/jsoncpp",
    "//third_party/boringssl:boringssl"
  ]

  public_deps = []

  public_configs = [ ":external_lib_config" ]
}

static_library("orb_integration")
{
  testonly = true

  sources = [
    "integration/OrbIntegration.cpp"
  ]

  public_configs = [ ":external_lib_config" ]

  deps = [
    "//content/public/browser:browser",
    "//content/shell:content_shell_lib"
  ]
}

static_library("orb_util")
{
  sources = [
    "moderator/utilities/JsonUtil.cpp",
    "moderator/utilities/StringUtil.cpp",
  ]

  public_configs = [ ":util_lib_config" ]

  include_dirs = [
   "include",
   "moderator",
  ]

  deps = [
    "//third_party/jsoncpp",
    "//third_party/orb/logging:orb_logging_deps",
    "//base",
    # For logging dependency. Seems to need //base otherwise can't find partition_alloc/flags.h
  ]

  defines = [ "IS_CHROMIUM" ]
  # Something very broken in JsonUtil.cpp's logging.
  # Without this JsonUtil.cpp's macros don't work, even if defined in logging:orb_logging instead.
}

config("util_lib_config") {
  include_dirs = [
   "moderator/utilities",
   ]
}

static_library("orb_network_services") {
  sources = [
    "moderator/network_services/json_rpc/JsonRpcService.cpp",
    "moderator/network_services/json_rpc/JsonRpcServiceUtil.cpp",
    "moderator/network_services/websocket_service.cpp"
  ]

  deps = [
    "//base", # For logging dependency
    "//third_party/jsoncpp",
    "//third_party/orb/external/libwebsockets/v4.3:libwebsockets",
    ":orb_util",
  ]

  public_deps = []

  public_configs = [
    ":external_network_services_config",
    "//third_party/orb/external/libwebsockets/v4.3:libwebsockets_public_config",
    "//third_party/jsoncpp:jsoncpp_config"
   ]
}

# Expose the include directory
config("external_network_services_config") {
  include_dirs = [
    "moderator/network_services/include",
    "moderator/network_services/json_rpc",
  ]
  defines = [ "IS_CHROMIUM" ]
}

source_set("test_orb_moderator_sources")
{
  sources = [ "test/moderator_unittest.cpp"]

  deps = [
    "//testing/gtest",
    ":orb"
  ]

  testonly = true
}

source_set("test_opapp_package_manager_sources")
{
  sources = [
    "test/opapp_package_manager_unittest.cpp",
    "test/OpAppPackageManagerTestInterface.cpp",
    "test/OpAppPackageManagerTestInterface.h"
  ]

  deps = [
    "//testing/gtest",
    ":opapp_package_manager"
  ]

  testonly = true
}

source_set("test_orb_video_window_sources")
{
  sources = [
    "test/video_window_unittest.cpp",
    "moderator/VideoWindow.cpp",
  ]

  deps = [
    "//testing/gtest",
    "//third_party/jsoncpp",
    "//base", # Seems to be some dependency on this for logging
    "//third_party/orb/logging:orb_logging_deps",
    ":orb_util",
    ":orb_network_services"
  ]

  include_dirs = [
    "include",
    "moderator",
    "moderator/utilities",
  ]

  testonly = true
}

source_set("test_orb_util_sources")
{
  sources = [
    "test/json_util_unittest.cpp",
    "test/string_util_unittest.cpp",
  ]

  deps = [
    "//testing/gtest",
    "//third_party/jsoncpp",
    ":orb_util",
  ]

  include_dirs = [
    "include",
    "moderator/utilities",
  ]

  testonly = true
}

source_set("test_orb_jsonrpcservice_sources")
{
  sources = [
    "moderator/network_services/test/jsonrpcservice_unittest.cpp",
    "moderator/network_services/test/jsonrpcserviceutil_unittest.cpp"
  ]

  deps = [
    "//testing/gtest",
    "//base", # There's no direct dependency on //base,
              # but without this there are compiler errors related to libwebsockets
    ":orb_network_services"
  ]

  testonly = true
}

source_set("test_orb_application_manager_sources")
{
  sources = [
    "test/application_manager_unittest.cpp",
    "test/MockApplicationSessionCallback.h",
    "moderator/app_mgr/xml_parser.h",
    "moderator/app_mgr/ait.cpp",
    "moderator/app_mgr/application_manager.cpp",
    "moderator/app_mgr/hbbtv_app.cpp",
    "moderator/app_mgr/opapp.cpp",
    "moderator/app_mgr/utils.cpp",
  ]

  deps = [
    "//testing/gtest",
    "//testing/gmock",
  ]

  include_dirs = [
   "include",
  ]

  defines = ["ORB_HBBTV_VERSION=204"]
  testonly = true
}

# Single executable that combines all test sources
executable("test_orb_all") {
  deps = [
    "//testing/gtest:gtest_main",
    #":test_orb_moderator_sources", # TODO Fix in FREE-283
    ":test_opapp_package_manager_sources",
    ":test_orb_video_window_sources",
    ":test_orb_util_sources",
    ":test_orb_jsonrpcservice_sources",
    ":test_orb_application_manager_sources"
  ]

  testonly = true
}
