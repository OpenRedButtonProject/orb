# Useful references: https://gn.googlesource.com/gn/+/main/docs/reference.md

# This is done by the calling script already
# import("//build/config/BUILDCONFIG.gn")

# Define the actual library target
static_library("orb") {
  sources = [
    "moderator/Moderator.cpp",
    "moderator/AppMgrInterface.cpp",
    "moderator/Network.cpp",
    "moderator/MediaSynchroniser.cpp",
    "moderator/app_mgr/ait.cpp",
    "moderator/app_mgr/application_manager.cpp",
    "moderator/app_mgr/hbbtv_app.cpp",
    "moderator/app_mgr/opapp.cpp",
    "moderator/app_mgr/utils.cpp",
    "moderator/app_mgr/xml_parser.cpp"
  ]

  deps = [
    "//base", # For logging dependency
    "//third_party/jsoncpp",
    "//third_party/libxml"
  ]

  public_deps = []

  public_configs = [ ":external_lib_config" ]
}

# Expose the include directory
config("external_lib_config") {
  include_dirs = [ "include" ]

  defines = [ "IS_CHROMIUM", "ORB_HBBTV_VERSION=203"]
}

static_library("orb_polyfill") {
  sources = [
    "polyfill/HtmlBuilder.cpp",
  ]

  deps = [
    "//base", # For logging dependency
    "../:orb_polyfill_js"
  ]

  public_deps = []

  public_configs = [ ":external_lib_config" ]
}

executable("test_orb_polyfill")
{
  sources = [ "polyfill/polyfill_unittest.cpp" ]

  deps = [
    "//testing/gtest",
    "//testing/gtest:gtest_main",
    ":orb_polyfill"
  ]

  testonly = true
}

executable("test_orb_moderator")
{
  sources = [ "test/moderator_unittest.cpp"]

  deps = [
    "//testing/gtest",
    "//testing/gtest:gtest_main",
    ":orb"
  ]

  testonly = true
}
